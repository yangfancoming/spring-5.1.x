<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd">

  <bean id="knight" class="sia.knights.knight.impl.BraveKnight">
    <constructor-arg ref="quest" />
  </bean>

  <bean id="quest" class="sia.knights.quest.impl.SlayDragonQuest">
    <constructor-arg value="#{T(System).out}" />
  </bean>

  <bean id="minstrel" class="sia.knights.Minstrel">
    <constructor-arg value="#{T(System).out}" />
  </bean>



    <aop:config>
    <aop:aspect ref="minstrel">
      <aop:pointcut id="embark" expression="execution(* *.embarkOnQuest(..))"/>

        <!--（使用<aop:before>） 在embarkOnQuest()方法执行前调 用Minstrel的singBeforeQuest()方法。 这种方式被称为前置通知（before advice） 。-->
      <aop:before pointcut-ref="embark"  method="singBeforeQuest"/>

        <!--（使用<aop:after>）在embarkOnQuest()方法执行后调用singAfter Quest()方法。 这种方式被称为后置通知（after advice） 。-->
      <aop:after pointcut-ref="embark"  method="singAfterQuest"/>



    </aop:aspect>
  </aop:config>

</beans>
