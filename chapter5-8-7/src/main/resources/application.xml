<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans.xsd
	    http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
	    http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd"
	   default-autowire="byName">


	<!--开启注解扫描-->
	<context:component-scan base-package="com.goat.chapter587"></context:component-scan>

	<!-- 国际化资源文件 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- 如果资源文件放在classpath下，basename的value必须有classpath:前缀，否则报错：No message found under code... -->
		<property name="basename" value="i18n.messages" />
		<!-- 如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称返回  -->
		<property name="useCodeAsDefaultMessage" value="true" />
		<!--<property name="defaultEncoding" value="ISO-8859-1"/>-->
	</bean>


	<mvc:interceptors>
		<!-- 该拦截器通过名为”locale”的参数来拦截HTTP请求，使其重新设置页面的区域化信息 -->
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<!-- 设置请求的参数名为locale -->
			<property name="paramName" value="locale"/>
		</bean>
	</mvc:interceptors>


	<!-- SessionLocaleResolver解析器 -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<!-- 设置session attribute的key -->
		<property name="localeAttributeName" value="locale"/>
		<!-- 设置默认的Locale -->
		<property name="defaultLocale" value="en"/>
	</bean>
</beans>